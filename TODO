* change cb-info to react earlier, as soon as the .log file
  exists the cb-info code should send information. Sending info
  based on the .result.yml is very late and does not allow
  to fetch intermediate build states

* remind yourself on Fedora selinux is active which prevents
  several actions like rpm --initdb. To fix this call

  sudo setenforce 0

* Increase cb-ctl --build-log to fetch prepare and build log at once

* add tests

* add documentation

* Scale consumers
  https://stackoverflow.com/questions/40326600/balancing-kafka-consumers/40327547

* Issue: release number across runners.
  If a package is build on one runner the release starts at 1 and
  increases. If the package is picked up by another runner it will
  use the release state of this runner which can be 1 or >1 if
  that package has been built by that runner in the past.
  Thus the release number is non deterministic at the moment.
  No good solution so far, don't want to interconnect services

* There are 3 topics in Kafka so far
  cb-request
  cb-response
  cb-info
  They need to be created with the instructions from here
  https://docs.aws.amazon.com/msk/latest/developerguide/create-topic.html
  NOTE: In Amazon access to Kafka is by default only possible within the VPC

* Write a dependency checker cb-solve based on satsolver. On a regular schedule
  resolve dependencies in parallell and trigger a rebuild by sending a request
  to the cb_request topic such that the scheduler rebuilds

* write a collector which collects binary packages and creates
  repositories from it

* Write a client program cb-ctl which allows to e.g send a manual
  rebuild to the cb_request topic

* Create runner and fetcher/solver images for the cloud (Amazon)
  There must be at least one runner(cb-scheduler/cb-prepare/cb-run)
  and one fetcher/solver(cb-fetch/cb-solve) for the system to work.
  Also required is a running and accessible kafka broker.
  ==> The system should scale with more runner
  ==> Maybe fetcher and solver needs to be separated into extra
      images such that more solver increases performance
